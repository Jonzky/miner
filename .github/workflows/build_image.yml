name: Compile Docker Images

on:
  push:
    tags:
      - '*'
jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-09a8476a238972b9b
          ec2-instance-type: t4g.2xlarge
          subnet-id: subnet-1efbf645
          security-group-id: sg-06a0ab5afc5d9b27e

  build-image:
    name: Builds the docker image
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner 
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            jonzky/debug-helium-miner
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=sha,prefix=
            type=sha,format=long,prefix=

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .        
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/debug-helium-miner:buildcache
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/debug-helium-miner:buildcache,mode=max
          build-args: |
            VERSION=${{steps.tag.outputs.tag}}
            EXTRA_BUILD_APK_PACKAGES=apk-tools
            EXTRA_RUNNER_APK_PACKAGES=apk-tools
            BUILDER_IMAGE=arm64v8/erlang:24-alpine
            RUNNER_IMAGE=arm64v8/alpine:3.15
            REBAR_BUILD_TARGET=docker
            BUILD_NET=mainnet

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          repository: Jonzky/hm-miner
          event-type: miner-built
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "digest": "@${{ steps.docker_build.outputs.digest }}", "build_tag": "${{steps.tag.outputs.tag}}"}'

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - build-image # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  